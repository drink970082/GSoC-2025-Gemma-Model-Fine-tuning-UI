; ModuleID = 'jit_threefry2x32'
source_filename = "jit_threefry2x32"
target datalayout = "e-p6:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"
target triple = "nvptx64-nvidia-cuda"

define ptx_kernel void @loop_add_fusion_1(ptr noalias align 16 dereferenceable(4) %0, ptr noalias align 16 dereferenceable(4) %1, ptr noalias align 16 dereferenceable(4) %2, ptr noalias align 16 dereferenceable(4) %3, ptr noalias align 128 dereferenceable(4) %4) #0 {
  %6 = load i32, ptr %3, align 4, !invariant.load !1
  %7 = load i32, ptr %2, align 4, !invariant.load !1
  %8 = load i32, ptr %1, align 4, !invariant.load !1
  %9 = add i32 %7, %8
  %10 = shl i32 %9, 13
  %11 = lshr i32 %9, 19
  %12 = load i32, ptr %0, align 4, !invariant.load !1
  %13 = add i32 %6, %12
  %14 = or i32 %10, %11
  %15 = add i32 %13, %9
  %16 = xor i32 %15, %14
  %17 = shl i32 %16, 15
  %18 = lshr i32 %16, 17
  %19 = or i32 %17, %18
  %20 = add i32 %15, %16
  %21 = xor i32 %20, %19
  %22 = shl i32 %21, 26
  %23 = lshr i32 %21, 6
  %24 = add i32 %20, %21
  %25 = or i32 %22, %23
  %26 = xor i32 %24, %25
  %27 = shl i32 %26, 6
  %28 = lshr i32 %26, 26
  %29 = or i32 %27, %28
  %30 = add i32 %24, %26
  %31 = xor i32 %30, %29
  %32 = xor i32 %12, %8
  %33 = xor i32 %32, 466688986
  %34 = add i32 %31, %33
  %35 = add i32 %34, 1
  %36 = shl i32 %35, 17
  %37 = lshr i32 %35, 15
  %38 = add i32 %30, %8
  %39 = or i32 %36, %37
  %40 = add i32 %38, %35
  %41 = xor i32 %40, %39
  %42 = shl i32 %41, 29
  %43 = lshr i32 %41, 3
  %44 = or i32 %42, %43
  %45 = add i32 %40, %41
  %46 = xor i32 %45, %44
  %47 = shl i32 %46, 16
  %48 = lshr i32 %46, 16
  %49 = add i32 %45, %46
  %50 = or i32 %47, %48
  %51 = xor i32 %49, %50
  %52 = shl i32 %51, 24
  %53 = lshr i32 %51, 8
  %54 = or i32 %52, %53
  %55 = add i32 %49, %51
  %56 = xor i32 %55, %54
  %57 = add i32 %56, %12
  %58 = add i32 %57, 2
  %59 = shl i32 %58, 13
  %60 = lshr i32 %58, 19
  %61 = add i32 %55, %33
  %62 = or i32 %59, %60
  %63 = add i32 %61, %58
  %64 = xor i32 %63, %62
  %65 = shl i32 %64, 15
  %66 = lshr i32 %64, 17
  %67 = or i32 %65, %66
  %68 = add i32 %63, %64
  %69 = xor i32 %68, %67
  %70 = shl i32 %69, 26
  %71 = lshr i32 %69, 6
  %72 = add i32 %68, %69
  %73 = or i32 %70, %71
  %74 = xor i32 %72, %73
  %75 = shl i32 %74, 6
  %76 = lshr i32 %74, 26
  %77 = or i32 %75, %76
  %78 = add i32 %72, %74
  %79 = xor i32 %78, %77
  %80 = add i32 %79, %8
  %81 = add i32 %80, 3
  %82 = shl i32 %81, 17
  %83 = lshr i32 %81, 15
  %84 = add i32 %78, %12
  %85 = or i32 %82, %83
  %86 = add i32 %84, %81
  %87 = xor i32 %86, %85
  %88 = shl i32 %87, 29
  %89 = lshr i32 %87, 3
  %90 = or i32 %88, %89
  %91 = add i32 %86, %87
  %92 = xor i32 %91, %90
  %93 = shl i32 %92, 16
  %94 = lshr i32 %92, 16
  %95 = add i32 %91, %92
  %96 = or i32 %93, %94
  %97 = xor i32 %95, %96
  %98 = shl i32 %97, 24
  %99 = lshr i32 %97, 8
  %100 = or i32 %98, %99
  %101 = add i32 %95, %97
  %102 = xor i32 %101, %100
  %103 = add i32 %102, %33
  %104 = add i32 %103, 4
  %105 = shl i32 %104, 13
  %106 = lshr i32 %104, 19
  %107 = add i32 %101, %8
  %108 = or i32 %105, %106
  %109 = add i32 %107, %104
  %110 = xor i32 %109, %108
  %111 = shl i32 %110, 15
  %112 = lshr i32 %110, 17
  %113 = or i32 %111, %112
  %114 = add i32 %109, %110
  %115 = xor i32 %114, %113
  %116 = shl i32 %115, 26
  %117 = lshr i32 %115, 6
  %118 = or i32 %116, %117
  %119 = add i32 %114, %115
  %120 = xor i32 %119, %118
  %121 = add i32 %119, %120
  %122 = add i32 %121, %33
  store i32 %122, ptr %4, align 4
  ret void
}

define ptx_kernel void @loop_add_fusion(ptr noalias align 16 dereferenceable(4) %0, ptr noalias align 16 dereferenceable(4) %1, ptr noalias align 16 dereferenceable(4) %2, ptr noalias align 16 dereferenceable(4) %3, ptr noalias align 128 dereferenceable(4) %4) #0 {
  %6 = load i32, ptr %3, align 4, !invariant.load !1
  %7 = load i32, ptr %2, align 4, !invariant.load !1
  %8 = load i32, ptr %1, align 4, !invariant.load !1
  %9 = add i32 %7, %8
  %10 = shl i32 %9, 13
  %11 = lshr i32 %9, 19
  %12 = load i32, ptr %0, align 4, !invariant.load !1
  %13 = add i32 %6, %12
  %14 = or i32 %10, %11
  %15 = add i32 %13, %9
  %16 = xor i32 %15, %14
  %17 = shl i32 %16, 15
  %18 = lshr i32 %16, 17
  %19 = or i32 %17, %18
  %20 = add i32 %15, %16
  %21 = xor i32 %20, %19
  %22 = shl i32 %21, 26
  %23 = lshr i32 %21, 6
  %24 = add i32 %20, %21
  %25 = or i32 %22, %23
  %26 = xor i32 %24, %25
  %27 = shl i32 %26, 6
  %28 = lshr i32 %26, 26
  %29 = or i32 %27, %28
  %30 = add i32 %24, %26
  %31 = xor i32 %30, %29
  %32 = xor i32 %12, %8
  %33 = xor i32 %32, 466688986
  %34 = add i32 %31, %33
  %35 = add i32 %34, 1
  %36 = shl i32 %35, 17
  %37 = lshr i32 %35, 15
  %38 = add i32 %30, %8
  %39 = or i32 %36, %37
  %40 = add i32 %38, %35
  %41 = xor i32 %40, %39
  %42 = shl i32 %41, 29
  %43 = lshr i32 %41, 3
  %44 = or i32 %42, %43
  %45 = add i32 %40, %41
  %46 = xor i32 %45, %44
  %47 = shl i32 %46, 16
  %48 = lshr i32 %46, 16
  %49 = add i32 %45, %46
  %50 = or i32 %47, %48
  %51 = xor i32 %49, %50
  %52 = shl i32 %51, 24
  %53 = lshr i32 %51, 8
  %54 = or i32 %52, %53
  %55 = add i32 %49, %51
  %56 = xor i32 %55, %54
  %57 = add i32 %56, %12
  %58 = add i32 %57, 2
  %59 = shl i32 %58, 13
  %60 = lshr i32 %58, 19
  %61 = add i32 %55, %33
  %62 = or i32 %59, %60
  %63 = add i32 %61, %58
  %64 = xor i32 %63, %62
  %65 = shl i32 %64, 15
  %66 = lshr i32 %64, 17
  %67 = or i32 %65, %66
  %68 = add i32 %63, %64
  %69 = xor i32 %68, %67
  %70 = shl i32 %69, 26
  %71 = lshr i32 %69, 6
  %72 = add i32 %68, %69
  %73 = or i32 %70, %71
  %74 = xor i32 %72, %73
  %75 = shl i32 %74, 6
  %76 = lshr i32 %74, 26
  %77 = or i32 %75, %76
  %78 = add i32 %72, %74
  %79 = xor i32 %78, %77
  %80 = add i32 %79, %8
  %81 = add i32 %80, 3
  %82 = shl i32 %81, 17
  %83 = lshr i32 %81, 15
  %84 = add i32 %78, %12
  %85 = or i32 %82, %83
  %86 = add i32 %84, %81
  %87 = xor i32 %86, %85
  %88 = shl i32 %87, 29
  %89 = lshr i32 %87, 3
  %90 = or i32 %88, %89
  %91 = add i32 %86, %87
  %92 = xor i32 %91, %90
  %93 = shl i32 %92, 16
  %94 = lshr i32 %92, 16
  %95 = add i32 %91, %92
  %96 = or i32 %93, %94
  %97 = xor i32 %95, %96
  %98 = shl i32 %97, 24
  %99 = lshr i32 %97, 8
  %100 = or i32 %98, %99
  %101 = add i32 %95, %97
  %102 = xor i32 %101, %100
  %103 = add i32 %102, %33
  %104 = add i32 %103, 4
  %105 = shl i32 %104, 13
  %106 = lshr i32 %104, 19
  %107 = add i32 %101, %8
  %108 = or i32 %105, %106
  %109 = add i32 %107, %104
  %110 = xor i32 %109, %108
  %111 = shl i32 %110, 15
  %112 = lshr i32 %110, 17
  %113 = or i32 %111, %112
  %114 = add i32 %109, %110
  %115 = xor i32 %114, %113
  %116 = shl i32 %115, 26
  %117 = lshr i32 %115, 6
  %118 = or i32 %116, %117
  %119 = add i32 %114, %115
  %120 = xor i32 %119, %118
  %121 = shl i32 %120, 6
  %122 = lshr i32 %120, 26
  %123 = add i32 %119, %120
  %124 = or i32 %121, %122
  %125 = xor i32 %123, %124
  %126 = add i32 %125, %12
  %127 = add i32 %126, 5
  store i32 %127, ptr %4, align 4
  ret void
}

attributes #0 = { "nvvm.reqntid"="1,1,1" }

!llvm.module.flags = !{!0}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{}
