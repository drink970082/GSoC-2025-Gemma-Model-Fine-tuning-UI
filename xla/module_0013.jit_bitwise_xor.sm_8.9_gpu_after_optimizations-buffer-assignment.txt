BufferAssignment:
allocation 0: size 4, output shape is |u32[]|, maybe-live-out:
 value: <5 wrapped_xor @0> (size=4,offset=0): u32[]
allocation 1: size 4, parameter 0, shape |u32[]| at ShapeIndex {}:
 value: <3 Arg_0.1 @0> (size=4,offset=0): u32[]
allocation 2: size 4, parameter 1, shape |u32[]| at ShapeIndex {}:
 value: <4 Arg_1.2 @0> (size=4,offset=0): u32[]

Total bytes used: 12 (12B)

Used values:
<3 Arg_0.1 @0>
 positions:
  Arg_0.1
 uses:
  wrapped_xor, operand 0
 from instruction: %Arg_0.1 = u32[] parameter(0), metadata={op_name="x"}
<4 Arg_1.2 @0>
 positions:
  Arg_1.2
 uses:
  wrapped_xor, operand 1
 from instruction: %Arg_1.2 = u32[] parameter(1), metadata={op_name="y"}
<5 wrapped_xor @0>
 positions:
  wrapped_xor
 uses:
 from instruction: %wrapped_xor = u32[] fusion(%Arg_0.1, %Arg_1.2), kind=kLoop, calls=%wrapped_xor_computation, metadata={op_name="jit(bitwise_xor)/jit(main)/xor" source_file="/home/halcyon/root/gemma_fine_tuning_ui/backend/data_pipeline.py" source_line=119}


HloLiveRange (max 3):
  InstructionSequence:
    0:Arg_1.2
    1:Arg_0.1
    2:wrapped_xor
  BufferLiveRange:
    Arg_0.1{}:0-3
    Arg_1.2{}:0-3
    wrapped_xor{}:2-3
  Live ranges at 2 (peak):
    Arg_0.1{}: 4 bytes (cumulative: 4 bytes)
    Arg_1.2{}: 4 bytes (cumulative: 8 bytes)
    wrapped_xor{}: 4 bytes (cumulative: 12 bytes)
